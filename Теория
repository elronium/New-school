Тестирование - процесс исследования продукта на предмет соответствия между актуальным и ожидаемым его поведением.
Цель тестирования - предоставление обратной связи, обнаружение дефектов, уверенность в продукте, предоставление актуальной информации о соответствии исследуемого продукта требованиям.

Этапы тестирования:
Планирование
Проектирование тестов
Прогон
Оценка

Уровни тестрования:
Модульный: тестируются отдельные компоненты (модули) системы.
Интеграционный: тестируются взаимодействие модулей системы между собой.
Системное: проверка системы целлостно.
Приёмочное: проверка происходит уже непосредственно перед выпуском продукта/передачей заказчику.

Виды тестов:
Статическое: тестирование документации, код ревью
Функциональное: ЧТО система делает
Нефункциональное: удобство, скорость, надёжность КАК система работает
Тестирование после изменений: ретест, регресс

Тесты по знанию системы: 
Блэксбокс - исследование с точки зрения пользователя, без знания внутреннего устройства продукта (без знания кода)
Уайтбокс - тестирование внутренней системы когда есть доступ к коду
Грейбокс - есть только досутп к БД, ограниченные знания структуры

Жизненный цикл - начинается с принятия решения о создании продукта до момента его полного изъятия из эксплуатации:
-планирование
-проектирование
-разработка
-тестирование
-ввод в эксплуатацию
-сопровождение

Методологии разработки:
-Waterfall (каскадная модель): жёстко регламентирован, новый этам не начинается, пока не кончится предыдущий, нет возможности сделать шаг назад.
-Скрам: определенные задачи выполняются в течение определенных итераций (спринтов), проводятся митинги. Деплой на прод раз в неделю, две.
-Канбан: доска, частая смена задач. Деплой динамичен.

Жизненный цикл бага:
-обнаружен
-назначен
-в работе
-исправлен
-проверен
-закрыт -----ЛИБО-----открыт заново--отклонён--отложен

БАГ - несоответствие ожидаемого результата фактическому, или несоответствованием производимого продукта требованиям (прямым или косвенным).
Прымые требования - описаны в ТЗ, спеки, макеты.
Косвенные требования - что-то не задокументированное, но по умолчанию должно функционировать.

Баг-репорт. 
-название
-приоритет
-предусловия
-окружение
-шаги воспроизведения
-ожидаемый результат
-актуальный результат
-логи, скрины, видео

Приоритет (priority)/ Серьёзность (severity)
Высокий приоритет и низкий северити: опечатки в важных местах
Высокий северити и низкий приоритет: непопулярное окружение, много шагов (маленькая вероятность), функциональность, которой редко пользуются

Тестовая документация.
-Тест план - документ, описывающий весь объём работ по тестированию. Кто, что, как, сколько времени затратится.
-Тест-кейс - подробное описание какого-то функционала, который необходимо проверить.
-Чек-лист - перечисление проверок, без подробных описаний.

Техники тест дизайна

Классы эквивалентности: набор входных значений, на которые система отвечает одинаково. 
Позволяет минимизировать число тестов, не создавая отдельный сценарий для каждого возможного значения.
Граничные значения: проверяет границы классов эквивалентности. 
Таблица принятия решений - техника для комбинирования бизнес правил.
Диаграмма состояний и переходов - моделирует каждое состояние системы.
Метод парного тестирования - ......
Юз кейс - пользовательский сценарий. Показывает кто и что делает с системой для достижения конкретной цели. Это про конкретных людей.


